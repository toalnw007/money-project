{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createStore } from 'vuex';\nimport router from '../router';\nimport { auth } from '../firebase';\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, signInWithPopup, GoogleAuthProvider, signOut } from 'firebase/auth';\nexport default createStore({\n  state: {\n    user: null\n  },\n  mutations: {\n    SET_USER(state, user) {\n      state.user = user;\n    },\n    CLEAR_USER(state) {\n      state.user = null;\n    }\n  },\n  actions: {\n    async login({\n      commit\n    }, details) {\n      const {\n        email,\n        password\n      } = details;\n      try {\n        await signInWithEmailAndPassword(auth, email, password);\n      } catch (error) {\n        switch (error.code) {\n          case 'auth/user-not-found':\n            alert(\"User not found\");\n            break;\n          case 'auth/wrong-password':\n            alert(\"Wrong password\");\n            break;\n          default:\n            alert(\"Something went wrong\");\n        }\n        return;\n      }\n      console.log(auth.currentUser);\n      commit('SET_USER', auth.currentUser);\n      router.push('/');\n    },\n    async GoogleAuth({\n      commit\n    }) {\n      try {\n        await signInWithPopup(GoogleAuthProvider).then(result => {\n          let token = result.credential.accessToken;\n          let user = result.user;\n          console.log(token); // Token\n          console.log(user);\n          commit('SET_USER', user); // User that was authenticated\n        }).catch(err => {\n          console.log(err); // This will give you all the information needed to further debug any errors\n        });\n      } catch (error) {\n        switch (error.code) {\n          case 'auth/user-not-found':\n            alert(\"User not found\");\n            break;\n          case 'auth/wrong-password':\n            alert(\"Wrong password\");\n            break;\n          default:\n            alert(\"Something went wrong\");\n        }\n        return;\n      }\n      router.push('/');\n    },\n    async register({\n      commit\n    }, details) {\n      const {\n        email,\n        password\n      } = details;\n      try {\n        await createUserWithEmailAndPassword(auth, email, password);\n      } catch (error) {\n        switch (error.code) {\n          case 'auth/email-already-in-use':\n            alert(\"Email already in use\");\n            break;\n          case 'auth/invalid-email':\n            alert(\"Invalid email\");\n            break;\n          case 'auth/operation-not-allowed':\n            alert(\"Operation not allowed\");\n            break;\n          case 'auth/weak-password':\n            alert(\"Weak password\");\n            break;\n          default:\n            alert(\"Something went wrong\");\n        }\n        return;\n      }\n      commit('SET_USER', auth.currentUser);\n      router.push('/');\n    },\n    async logout({\n      commit\n    }) {\n      await signOut(auth);\n      commit('CLEAR_USER');\n      router.push('/login');\n    },\n    fetchUser({\n      commit\n    }) {\n      auth.onAuthStateChanged(async user => {\n        if (user === null) {\n          commit('CLEAR_USER');\n        } else {\n          commit('SET_USER', user);\n          if (router.isReady() && router.currentRoute.value.path === '/login') {\n            router.push('/');\n          }\n        }\n      });\n    }\n  }\n});","map":{"version":3,"names":["createStore","router","auth","createUserWithEmailAndPassword","signInWithEmailAndPassword","signInWithPopup","GoogleAuthProvider","signOut","state","user","mutations","SET_USER","CLEAR_USER","actions","login","commit","details","email","password","error","code","alert","console","log","currentUser","push","GoogleAuth","then","result","token","credential","accessToken","catch","err","register","logout","fetchUser","onAuthStateChanged","isReady","currentRoute","value","path"],"sources":["/Users/sunteen/Documents/GitHub/rocket-web/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\nimport router from '../router'\nimport { auth } from '../firebase'\nimport { \n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  signInWithPopup,\n  GoogleAuthProvider,\n  signOut \n} from 'firebase/auth'\n\nexport default createStore({\n  state: {\n    user: null\n  },\n  mutations: {\n\n    SET_USER (state, user) {\n      state.user = user\n    },\n\n    CLEAR_USER (state) {\n      state.user = null\n    }\n\n  },\n  actions: {\n    async login ({ commit }, details) {\n      const { email, password } = details\n\n      try {\n        await signInWithEmailAndPassword(auth, email, password)\n      } catch (error) {\n        switch(error.code) {\n          case 'auth/user-not-found':\n            alert(\"User not found\")\n            break\n          case 'auth/wrong-password':\n            alert(\"Wrong password\")\n            break\n          default:\n            alert(\"Something went wrong\")\n        }\n\n        return\n      }\n\n      console.log(auth.currentUser);\n      commit('SET_USER', auth.currentUser)\n\n      router.push('/')\n    },\n\n    async GoogleAuth ({ commit }) {\n  \n        try {\n          await signInWithPopup(GoogleAuthProvider).then((result) => {\n            let token = result.credential.accessToken;\n            let user = result.user;\n              console.log(token) // Token\n              console.log(user)\n              commit('SET_USER', user) // User that was authenticated\n          })\n          .catch((err) => {\n            console.log(err); // This will give you all the information needed to further debug any errors\n          });\n        } catch (error) {\n          switch(error.code) {\n            case 'auth/user-not-found':\n              alert(\"User not found\")\n              break\n            case 'auth/wrong-password':\n              alert(\"Wrong password\")\n              break\n            default:\n              alert(\"Something went wrong\")\n          }\n  \n          return\n        }\n  \n  \n        router.push('/')\n      },\n  \n\n    async register ({ commit}, details) {\n       const { email, password } = details\n\n      try {\n        await createUserWithEmailAndPassword(auth, email, password)\n      } catch (error) {\n        switch(error.code) {\n          case 'auth/email-already-in-use':\n            alert(\"Email already in use\")\n            break\n          case 'auth/invalid-email':\n            alert(\"Invalid email\")\n            break\n          case 'auth/operation-not-allowed':\n            alert(\"Operation not allowed\")\n            break\n          case 'auth/weak-password':\n            alert(\"Weak password\")\n            break\n          default:\n            alert(\"Something went wrong\")\n        }\n\n        return\n      }\n\n      commit('SET_USER', auth.currentUser)\n\n      router.push('/')\n    },\n\n    async logout ({ commit }) {\n      await signOut(auth)\n\n      commit('CLEAR_USER')\n\n      router.push('/login')\n    },\n\n    fetchUser ({ commit }) {\n      auth.onAuthStateChanged(async user => {\n        if (user === null) {\n          commit('CLEAR_USER')\n        } else {\n          commit('SET_USER', user)\n\n          if (router.isReady() && router.currentRoute.value.path === '/login') {\n            router.push('/')\n          }\n        }\n      })\n    }\n    \n  }\n})"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}