{"ast":null,"code":"import { setValue, init, reInit } from \"./index\";\nexport default {\n  __name: 'Main',\n  props: {\n    options: {\n      type: Object,\n      default() {\n        return {};\n      }\n    },\n    modelValue: {\n      type: String,\n      default: \"\"\n    }\n  },\n  setup(__props, {\n    expose,\n    emit\n  }) {\n    expose();\n    const props = __props;\n    const vPickerDirective = {\n      mounted(el, {\n        value\n      }) {\n        setValue(value.props, value.emit);\n        init(el, value.props, value.emit);\n      },\n      updated(el, {\n        oldValue,\n        value\n      }) {\n        if (oldValue.props.modelValue !== value.props.modelValue) {\n          reInit(el, value.props, value.emit);\n        }\n      }\n    };\n    const __returned__ = {\n      vPickerDirective,\n      props,\n      emit,\n      get setValue() {\n        return setValue;\n      },\n      get init() {\n        return init;\n      },\n      get reInit() {\n        return reInit;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":"AAKA,SAASA,QAAQ,EAAEC,IAAI,EAAEC,MAAM,QAAQ,SAAS;;;;;;;;;;;;;;;;;;;;;IAEhD,MAAMC,gBAAgB,GAAG;MACvBC,OAAO,CAACC,EAAE,EAAE;QAAEC;MAAM,CAAC,EAAE;QACrBN,QAAQ,CAACM,KAAK,CAACC,KAAK,EAAED,KAAK,CAACE,IAAI,CAAC;QACjCP,IAAI,CAACI,EAAE,EAAEC,KAAK,CAACC,KAAK,EAAED,KAAK,CAACE,IAAI,CAAC;MACnC,CAAC;MACDC,OAAO,CAACJ,EAAE,EAAE;QAAEK,QAAQ;QAAEJ;MAAM,CAAC,EAAE;QAC/B,IAAII,QAAQ,CAACH,KAAK,CAACI,UAAU,KAAKL,KAAK,CAACC,KAAK,CAACI,UAAU,EAAE;UACxDT,MAAM,CAACG,EAAE,EAAEC,KAAK,CAACC,KAAK,EAAED,KAAK,CAACE,IAAI,CAAC;QACrC;MACF;IACF,CAAC","names":["setValue","init","reInit","vPickerDirective","mounted","el","value","props","emit","updated","oldValue","modelValue"],"sources":["/Users/sunteen/Documents/GitHub/rocket-web/src/global-components/litepicker/Main.vue"],"sourcesContent":["<template>\n  <input v-picker-directive=\"{ props, emit }\" type=\"text\" :value=\"modelValue\" />\n</template>\n\n<script setup>\nimport { setValue, init, reInit } from \"./index\";\n\nconst vPickerDirective = {\n  mounted(el, { value }) {\n    setValue(value.props, value.emit);\n    init(el, value.props, value.emit);\n  },\n  updated(el, { oldValue, value }) {\n    if (oldValue.props.modelValue !== value.props.modelValue) {\n      reInit(el, value.props, value.emit);\n    }\n  },\n};\n\nconst props = defineProps({\n  options: {\n    type: Object,\n    default() {\n      return {};\n    },\n  },\n  modelValue: {\n    type: String,\n    default: \"\",\n  },\n});\n\nconst emit = defineEmits();\n</script>\n\n<style scoped>\ntextarea {\n  margin-left: 1000000px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}