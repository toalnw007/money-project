{"ast":null,"code":"import { renderSlot as _renderSlot, openBlock as _openBlock, createElementBlock as _createElementBlock, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  ref: \"toastifyRef\",\n  class: \"toastify-content hidden\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _withDirectives((_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_renderSlot(_ctx.$slots, \"default\")])), [[$setup[\"vToastifyDirective\"], {\n    props: $setup.props,\n    emit: $setup.emit\n  }]]);\n}","map":{"version":3,"mappings":";;EAEIA,GAAG,EAAC,aAAa;EAEjBC,KAAK,EAAC;;;wCAHRC,oBAMM,OANNC,UAMM,GADJC,YAAaC;WAHWC,YAAK;IAAAC,MAAED;EAAI","names":["ref","class","_createElementBlock","_hoisted_1","_renderSlot","_ctx","$setup","emit"],"sourceRoot":"","sources":["/Users/jisoo/Desktop/github/rocket-web/src/global-components/notification/Main.vue"],"sourcesContent":["<template>\n  <div\n    ref=\"toastifyRef\"\n    v-toastify-directive=\"{ props, emit }\"\n    class=\"toastify-content hidden\"\n  >\n    <slot></slot>\n  </div>\n</template>\n\n<script setup>\nimport { inject, onMounted, ref } from \"vue\";\nimport { init, reInit } from \"./index\";\n\nconst vToastifyDirective = {\n  mounted(el, { value }) {\n    init(el, value.props);\n  },\n  updated(el) {\n    reInit(el);\n  },\n};\n\nconst props = defineProps({\n  options: {\n    type: Object,\n    default: () => ({}),\n  },\n  refKey: {\n    type: String,\n    default: null,\n  },\n});\n\nconst emit = defineEmits();\n\nconst toastifyRef = ref();\nconst bindInstance = () => {\n  if (props.refKey) {\n    const bind = inject(`bind[${props.refKey}]`);\n    if (bind) {\n      bind(toastifyRef.value);\n    }\n  }\n};\n\nonMounted(() => {\n  bindInstance();\n});\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}