{"ast":null,"code":"import { inject, onMounted, ref } from \"vue\";\nimport { init, reInit } from \"./index\";\nexport default {\n  __name: 'Main',\n  props: {\n    options: {\n      type: Object,\n      default: () => ({})\n    },\n    refKey: {\n      type: String,\n      default: null\n    }\n  },\n  setup(__props, {\n    expose,\n    emit\n  }) {\n    expose();\n    const props = __props;\n    const vToastifyDirective = {\n      mounted(el, {\n        value\n      }) {\n        init(el, value.props);\n      },\n      updated(el) {\n        reInit(el);\n      }\n    };\n    const toastifyRef = ref();\n    const bindInstance = () => {\n      if (props.refKey) {\n        const bind = inject(`bind[${props.refKey}]`);\n        if (bind) {\n          bind(toastifyRef.value);\n        }\n      }\n    };\n    onMounted(() => {\n      bindInstance();\n    });\n    const __returned__ = {\n      vToastifyDirective,\n      props,\n      emit,\n      toastifyRef,\n      bindInstance,\n      inject,\n      onMounted,\n      ref,\n      get init() {\n        return init;\n      },\n      get reInit() {\n        return reInit;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":"AAWA,SAASA,MAAM,EAAEC,SAAS,EAAEC,GAAG,QAAQ,KAAK;AAC5C,SAASC,IAAI,EAAEC,MAAM,QAAQ,SAAS;;;;;;;;;;;;;;;;;;;IAEtC,MAAMC,kBAAkB,GAAG;MACzBC,OAAO,CAACC,EAAE,EAAE;QAAEC;MAAM,CAAC,EAAE;QACrBL,IAAI,CAACI,EAAE,EAAEC,KAAK,CAACC,KAAK,CAAC;MACvB,CAAC;MACDC,OAAO,CAACH,EAAE,EAAE;QACVH,MAAM,CAACG,EAAE,CAAC;MACZ;IACF,CAAC;IAeD,MAAMI,WAAW,GAAGT,GAAG,EAAE;IACzB,MAAMU,YAAY,GAAG,MAAM;MACzB,IAAIH,KAAK,CAACI,MAAM,EAAE;QAChB,MAAMC,IAAI,GAAGd,MAAM,CAAE,QAAOS,KAAK,CAACI,MAAO,GAAE,CAAC;QAC5C,IAAIC,IAAI,EAAE;UACRA,IAAI,CAACH,WAAW,CAACH,KAAK,CAAC;QACzB;MACF;IACF,CAAC;IAEDP,SAAS,CAAC,MAAM;MACdW,YAAY,EAAE;IAChB,CAAC,CAAC","names":["inject","onMounted","ref","init","reInit","vToastifyDirective","mounted","el","value","props","updated","toastifyRef","bindInstance","refKey","bind"],"sources":["/Users/jisoo/Desktop/github/rocket-web/src/global-components/notification/Main.vue"],"sourcesContent":["<template>\n  <div\n    ref=\"toastifyRef\"\n    v-toastify-directive=\"{ props, emit }\"\n    class=\"toastify-content hidden\"\n  >\n    <slot></slot>\n  </div>\n</template>\n\n<script setup>\nimport { inject, onMounted, ref } from \"vue\";\nimport { init, reInit } from \"./index\";\n\nconst vToastifyDirective = {\n  mounted(el, { value }) {\n    init(el, value.props);\n  },\n  updated(el) {\n    reInit(el);\n  },\n};\n\nconst props = defineProps({\n  options: {\n    type: Object,\n    default: () => ({}),\n  },\n  refKey: {\n    type: String,\n    default: null,\n  },\n});\n\nconst emit = defineEmits();\n\nconst toastifyRef = ref();\nconst bindInstance = () => {\n  if (props.refKey) {\n    const bind = inject(`bind[${props.refKey}]`);\n    if (bind) {\n      bind(toastifyRef.value);\n    }\n  }\n};\n\nonMounted(() => {\n  bindInstance();\n});\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}