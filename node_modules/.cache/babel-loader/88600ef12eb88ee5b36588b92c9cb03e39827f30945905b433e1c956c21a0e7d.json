{"ast":null,"code":"import { computed } from \"vue\";\nimport { useDarkModeStore } from \"@/stores/dark-mode\";\nimport { useColorSchemeStore } from \"@/stores/color-scheme\";\nimport { colors } from \"@/utils/colors\";\nexport default {\n  __name: 'Main',\n  props: {\n    width: {\n      type: [Number, String],\n      default: \"auto\"\n    },\n    height: {\n      type: [Number, String],\n      default: \"auto\"\n    }\n  },\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const props = __props;\n    const darkMode = computed(() => useDarkModeStore().darkMode);\n    const colorScheme = computed(() => useColorSchemeStore().colorScheme);\n    const data = computed(() => {\n      const configData = {\n        labels: [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"],\n        datasets: [{\n          barPercentage: 0.35,\n          data: [4, 7, 5, 4, 9, 7, 5],\n          borderWidth: 1,\n          borderColor: colorScheme.value ? colors.primary(0.7) : \"\",\n          backgroundColor: colorScheme.value ? colors.primary(0.11) : \"\"\n        }]\n      };\n      return darkMode.value ? configData : configData;\n    });\n    const options = computed(() => {\n      return {\n        maintainAspectRatio: false,\n        plugins: {\n          legend: {\n            display: false\n          }\n        },\n        scales: {\n          x: {\n            ticks: {\n              display: false\n            },\n            grid: {\n              display: false,\n              drawBorder: false\n            }\n          },\n          y: {\n            ticks: {\n              display: false,\n              beginAtZero: true\n            },\n            grid: {\n              display: false,\n              drawBorder: false\n            }\n          }\n        }\n      };\n    });\n    const __returned__ = {\n      props,\n      darkMode,\n      colorScheme,\n      data,\n      options,\n      computed,\n      get useDarkModeStore() {\n        return useDarkModeStore;\n      },\n      get useColorSchemeStore() {\n        return useColorSchemeStore;\n      },\n      get colors() {\n        return colors;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":"AAWA,SAASA,QAAQ,QAAQ,KAAK;AAC9B,SAASC,gBAAgB,QAAQ,oBAAoB;AACrD,SAASC,mBAAmB,QAAQ,uBAAuB;AAC3D,SAASC,MAAM,QAAQ,gBAAgB;;;;;;;;;;;;;;;;;;IAavC,MAAMC,QAAQ,GAAGJ,QAAQ,CAAC,MAAMC,gBAAgB,EAAE,CAACG,QAAQ,CAAC;IAC5D,MAAMC,WAAW,GAAGL,QAAQ,CAAC,MAAME,mBAAmB,EAAE,CAACG,WAAW,CAAC;IAErE,MAAMC,IAAI,GAAGN,QAAQ,CAAC,MAAM;MAC1B,MAAMO,UAAU,GAAG;QACjBC,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;QACzDC,QAAQ,EAAE,CACR;UACEC,aAAa,EAAE,IAAI;UACnBJ,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;UAC3BK,WAAW,EAAE,CAAC;UACdC,WAAW,EAAEP,WAAW,CAACQ,KAAK,GAAGV,MAAM,CAACW,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE;UACzDC,eAAe,EAAEV,WAAW,CAACQ,KAAK,GAAGV,MAAM,CAACW,OAAO,CAAC,IAAI,CAAC,GAAG;QAC9D,CAAC;MAEL,CAAC;MAED,OAAOV,QAAQ,CAACS,KAAK,GAAGN,UAAU,GAAGA,UAAU;IACjD,CAAC,CAAC;IAEF,MAAMS,OAAO,GAAGhB,QAAQ,CAAC,MAAM;MAC7B,OAAO;QACLiB,mBAAmB,EAAE,KAAK;QAC1BC,OAAO,EAAE;UACPC,MAAM,EAAE;YACNC,OAAO,EAAE;UACX;QACF,CAAC;QACDC,MAAM,EAAE;UACNC,CAAC,EAAE;YACDC,KAAK,EAAE;cACLH,OAAO,EAAE;YACX,CAAC;YACDI,IAAI,EAAE;cACJJ,OAAO,EAAE,KAAK;cACdK,UAAU,EAAE;YACd;UACF,CAAC;UACDC,CAAC,EAAE;YACDH,KAAK,EAAE;cACLH,OAAO,EAAE,KAAK;cACdO,WAAW,EAAE;YACf,CAAC;YACDH,IAAI,EAAE;cACJJ,OAAO,EAAE,KAAK;cACdK,UAAU,EAAE;YACd;UACF;QACF;MACF,CAAC;IACH,CAAC,CAAC","names":["computed","useDarkModeStore","useColorSchemeStore","colors","darkMode","colorScheme","data","configData","labels","datasets","barPercentage","borderWidth","borderColor","value","primary","backgroundColor","options","maintainAspectRatio","plugins","legend","display","scales","x","ticks","grid","drawBorder","y","beginAtZero"],"sources":["/Users/jisoo/Desktop/github/rocket-web/src/components/report-bar-chart-1/Main.vue"],"sourcesContent":["<template>\n  <Chart\n    type=\"bar\"\n    :width=\"width\"\n    :height=\"height\"\n    :data=\"data\"\n    :options=\"options\"\n  />\n</template>\n\n<script setup>\nimport { computed } from \"vue\";\nimport { useDarkModeStore } from \"@/stores/dark-mode\";\nimport { useColorSchemeStore } from \"@/stores/color-scheme\";\nimport { colors } from \"@/utils/colors\";\n\nconst props = defineProps({\n  width: {\n    type: [Number, String],\n    default: \"auto\",\n  },\n  height: {\n    type: [Number, String],\n    default: \"auto\",\n  },\n});\n\nconst darkMode = computed(() => useDarkModeStore().darkMode);\nconst colorScheme = computed(() => useColorSchemeStore().colorScheme);\n\nconst data = computed(() => {\n  const configData = {\n    labels: [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"],\n    datasets: [\n      {\n        barPercentage: 0.35,\n        data: [4, 7, 5, 4, 9, 7, 5],\n        borderWidth: 1,\n        borderColor: colorScheme.value ? colors.primary(0.7) : \"\",\n        backgroundColor: colorScheme.value ? colors.primary(0.11) : \"\",\n      },\n    ],\n  };\n\n  return darkMode.value ? configData : configData;\n});\n\nconst options = computed(() => {\n  return {\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: false,\n      },\n    },\n    scales: {\n      x: {\n        ticks: {\n          display: false,\n        },\n        grid: {\n          display: false,\n          drawBorder: false,\n        },\n      },\n      y: {\n        ticks: {\n          display: false,\n          beginAtZero: true,\n        },\n        grid: {\n          display: false,\n          drawBorder: false,\n        },\n      },\n    },\n  };\n});\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}